/*
 * bootloader.h
 *
 *  Created on: Oct 10, 2023
 *      Author: sghute
 */

#ifndef INC_BOOTLOADER_H_
#define INC_BOOTLOADER_H_

#include "main.h"
#include <stdint.h>
#include <string.h>
#include "stdbool.h"

// Addresses for the bootloader, config, app, and temp sections
#define BOOTLOADER_START_ADDR   0x8000000  // Start address of the bootloader section
#define CONFIG_START_ADDR       0x8020000  // Start address of the config section
#define APP_START_ADDR          0x8040000  // Start address of the app section
#define TEMP_START_ADDR         0x80C0000  // Start address of the temp section
#define TEMP_SECTION_SIZE       0x40000     // Size of the temp section (256KB)
#define APP_SECTION_SIZE		0x60000
#define APP_END_ADDR			APP_START_ADDR + APP_SECTION_SIZE
#define CONFIG_END_ADDR			CONFIG_START_ADDR + 0x10000
#define FIRMWARE_SIZE_ADDR		0x8020004


#define BOOTLOADER_TIMEOUT_MS				5000
#define CRC_POLYNOMIAL						0x04C11DB7
#define UPDATE_FLAG_VALUE					0xDEADBEEF
#define UPDATE_FLAG_RESET_VALUE				0xFFFFFFFF


void bootloader_function(void);
bool update_application(uint32_t app_size);
void jump_to_application(uint32_t app_address);
uint32_t calculate_crc32(uint8_t *data, uint32_t size);
uint32_t get_flash_sector(uint32_t address);
HAL_StatusTypeDef erase_flash(uint32_t start_address, uint32_t end_address);
HAL_StatusTypeDef transfer_flash_data(uint32_t src_address, uint32_t dest_address, uint32_t length);

#endif /* INC_BOOTLOADER_H_ */
